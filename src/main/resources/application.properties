# Info
info.application.artifactId=${name}
info.application.version=${version}
info.application.description=@project.description@
info.properties.environment=${ENV:"azure"}
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Server
server.servlet.context-path=/
server.port=8080
# Logging
logging.level.root=\${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.pagopa=\${APP_LOGGING_LEVEL:INFO}
# Azure Storage Queue
spring.cloud.azure.storage.queue.enable=true
spring.cloud.azure.storage.queue.account-key=\${WALLET_STORAGE_QUEUE_KEY}
spring.cloud.azure.storage.queue.account-name=\${WALLET_STORAGE_QUEUE_ACCOUNT_NAME}
spring.cloud.azure.storage.queue.endpoint=\${WALLET_STORAGE_QUEUE_ENDPOINT}
# wallet expiration queue parameters
azure.storage.queues.wallet.expiration.name=\${WALLET_EXPIRATION_QUEUE_NAME:wallet-expiration-queue}
azure.storage.queues.wallet.expiration.polling.maxMessagePerPoll=\${WALLET_EXPIRATION_QUEUE_POLLING_MAX_MESSAGE_PER_POLL:10}
azure.storage.queues.wallet.expiration.polling.fixedDelay=\${WALLET_EXPIRATION_QUEUE_POLLING_FIXED_DELAY_MS:1000}
# wallet cdc queue parameters
azure.storage.queues.wallet.cdc.name=\${WALLET_CDC_QUEUE_NAME}
azure.storage.queues.wallet.cdc.polling.maxMessagePerPoll=\${WALLET_CDC_QUEUE_POLLING_MAX_MESSAGE_PER_POLL:10}
azure.storage.queues.wallet.cdc.polling.fixedDelay=\${WALLET_CDC_QUEUE_POLLING_FIXED_DELAY_MS:1000}
# Wallet Api Configuration
wallet.service.uri=\${WALLET_SERVICE_URI}
wallet.service.readTimeout=\${WALLET_SERVICE_READ_TIMEOUT:10000}
wallet.service.connectionTimeout=\${WALLET_SERVICE_CONNECTION_TIMEOUT:10000}
# Event Hub Connection String
azure.eventhub.bootstrapServers=\${AZURE_EVENTHUB_BOOTSTRAP_SERVER}
azure.eventhub.cdcTopicName=\${AZURE_EVENTHUB_TOPIC_NAME}
azure.eventhub.connectionString=\${AZURE_EVENTHUB_CONNECTION_STRING}
# Retry policy for sending message
cdc.retry-send.maxAttempts=\${CDC_SEND_RETRY_MAX_ATTEMPTS}
cdc.retry-send.intervalInMs=\${CDC_SEND_RETRY_INTERVAL_IN_MS}
# redis configuration
spring.data.redis.host=\${REDIS_HOST}
spring.data.redis.password=\${REDIS_PASSWORD}
spring.data.redis.port=\${REDIS_PORT}
spring.data.redis.ssl.enabled=\${REDIS_SSL_ENABLED}
# Redis stream configuration
redis-stream.event-controller.streamKey=\${REDIS_STREAM_EVENT_CONTROLLER_STREAM_KEY}
redis-stream.event-controller.consumerNamePrefix=\${REDIS_STREAM_EVENT_CONTROLLER_CONSUMER_NAME_PREFIX}
# event receivers controller configurations
eventController.status.pollingChron=\${EVENT_CONTROLLER_STATUS_POLLING_CHRON}
eventController.deploymentVersion=\${DEPLOYMENT_VERSION:PROD}
spring.task.scheduling.pool.size=5
security.apiKey.securedPaths=\${SECURITY_API_KEYS_SECURED_PATHS}
security.apiKey.primary=\${SECURITY_API_KEYS_PRIMARY}
security.apiKey.secondary=\${SECURITY_API_KEYS_SECONDARY}